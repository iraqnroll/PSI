[{"D:\\C#\\PSI\\psi-frontend\\src\\index.js":"1","D:\\C#\\PSI\\psi-frontend\\src\\reportWebVitals.js":"2","D:\\C#\\PSI\\psi-frontend\\src\\App.js":"3","D:\\C#\\PSI\\psi-frontend\\src\\services\\authService.js":"4","D:\\C#\\PSI\\psi-frontend\\src\\components\\logout.jsx":"5","D:\\C#\\PSI\\psi-frontend\\src\\components\\receipts.jsx":"6","D:\\C#\\PSI\\psi-frontend\\src\\components\\navBar.jsx":"7","D:\\C#\\PSI\\psi-frontend\\src\\components\\Home.jsx":"8","D:\\C#\\PSI\\psi-frontend\\src\\components\\loginForm.jsx":"9","D:\\C#\\PSI\\psi-frontend\\src\\components\\registerForm.jsx":"10","D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptDetails.jsx":"11","D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptForm.jsx":"12","D:\\C#\\PSI\\psi-frontend\\src\\components\\userStats.jsx":"13","D:\\C#\\PSI\\psi-frontend\\src\\components\\userDetails.jsx":"14","D:\\C#\\PSI\\psi-frontend\\src\\components\\notFound.jsx":"15","D:\\C#\\PSI\\psi-frontend\\src\\components\\priceHistory.jsx":"16","D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingForm.jsx":"17","D:\\C#\\PSI\\psi-frontend\\src\\components\\dealPage.jsx":"18","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\protectedRoute.jsx":"19","D:\\C#\\PSI\\psi-frontend\\src\\services\\httpService.js":"20","D:\\C#\\PSI\\psi-frontend\\src\\services\\receiptService.js":"21","D:\\C#\\PSI\\psi-frontend\\src\\services\\userService.js":"22","D:\\C#\\PSI\\psi-frontend\\src\\services\\itemService.js":"23","D:\\C#\\PSI\\psi-frontend\\src\\services\\itemPriceService.js":"24","D:\\C#\\PSI\\psi-frontend\\src\\services\\userStatsService.js":"25","D:\\C#\\PSI\\psi-frontend\\src\\services\\shoppingCartService.js":"26","D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptTable.jsx":"27","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\pagination.jsx":"28","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\listGroup.jsx":"29","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\form.jsx":"30","D:\\C#\\PSI\\psi-frontend\\src\\components\\itemPriceTable.jsx":"31","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\select.jsx":"32","D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartForm.jsx":"33","D:\\C#\\PSI\\psi-frontend\\src\\components\\itemPriceForm.jsx":"34","D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartPage.jsx":"35","D:\\C#\\PSI\\psi-frontend\\src\\components\\dealTable.jsx":"36","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\table.jsx":"37","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\input.jsx":"38","D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartTable.jsx":"39","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\tableBody.jsx":"40","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\tableHeader.jsx":"41"},{"size":436,"mtime":1613826347249,"results":"42","hashOfConfig":"43"},{"size":375,"mtime":1613826347259,"results":"44","hashOfConfig":"43"},{"size":2214,"mtime":1613826347134,"results":"45","hashOfConfig":"43"},{"size":972,"mtime":1613826347260,"results":"46","hashOfConfig":"43"},{"size":265,"mtime":1613826347177,"results":"47","hashOfConfig":"43"},{"size":4560,"mtime":1613826347216,"results":"48","hashOfConfig":"43"},{"size":1976,"mtime":1613826347178,"results":"49","hashOfConfig":"43"},{"size":194,"mtime":1613826966540,"results":"50","hashOfConfig":"43"},{"size":1339,"mtime":1613826347176,"results":"51","hashOfConfig":"43"},{"size":1481,"mtime":1613826347219,"results":"52","hashOfConfig":"43"},{"size":3247,"mtime":1613826347193,"results":"53","hashOfConfig":"43"},{"size":5719,"mtime":1613826347213,"results":"54","hashOfConfig":"43"},{"size":6902,"mtime":1613826347236,"results":"55","hashOfConfig":"43"},{"size":1677,"mtime":1613826347235,"results":"56","hashOfConfig":"43"},{"size":118,"mtime":1613826347178,"results":"57","hashOfConfig":"43"},{"size":3470,"mtime":1613826347182,"results":"58","hashOfConfig":"43"},{"size":4512,"mtime":1613826347235,"results":"59","hashOfConfig":"43"},{"size":3002,"mtime":1613826347166,"results":"60","hashOfConfig":"43"},{"size":647,"mtime":1613826347148,"results":"61","hashOfConfig":"43"},{"size":546,"mtime":1613826347275,"results":"62","hashOfConfig":"43"},{"size":2843,"mtime":1613826347307,"results":"63","hashOfConfig":"43"},{"size":657,"mtime":1613826347321,"results":"64","hashOfConfig":"43"},{"size":260,"mtime":1613826347285,"results":"65","hashOfConfig":"43"},{"size":2785,"mtime":1613826347284,"results":"66","hashOfConfig":"43"},{"size":3692,"mtime":1613826347338,"results":"67","hashOfConfig":"43"},{"size":2867,"mtime":1613826347320,"results":"68","hashOfConfig":"43"},{"size":1543,"mtime":1613826347214,"results":"69","hashOfConfig":"43"},{"size":1060,"mtime":1613826347148,"results":"70","hashOfConfig":"43"},{"size":787,"mtime":1613826347147,"results":"71","hashOfConfig":"43"},{"size":2404,"mtime":1613826347145,"results":"72","hashOfConfig":"43"},{"size":542,"mtime":1613826347175,"results":"73","hashOfConfig":"43"},{"size":587,"mtime":1613826347149,"results":"74","hashOfConfig":"43"},{"size":1664,"mtime":1613826347219,"results":"75","hashOfConfig":"43"},{"size":1774,"mtime":1613826347174,"results":"76","hashOfConfig":"43"},{"size":5050,"mtime":1613826347220,"results":"77","hashOfConfig":"43"},{"size":1117,"mtime":1613826347167,"results":"78","hashOfConfig":"43"},{"size":409,"mtime":1613826347150,"results":"79","hashOfConfig":"43"},{"size":380,"mtime":1613826347146,"results":"80","hashOfConfig":"43"},{"size":769,"mtime":1613826347221,"results":"81","hashOfConfig":"43"},{"size":1014,"mtime":1613826347151,"results":"82","hashOfConfig":"43"},{"size":1341,"mtime":1613826347151,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1hnlmpd",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"86"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"D:\\C#\\PSI\\psi-frontend\\src\\index.js",[],["179","180"],"D:\\C#\\PSI\\psi-frontend\\src\\reportWebVitals.js",[],"D:\\C#\\PSI\\psi-frontend\\src\\App.js",[],"D:\\C#\\PSI\\psi-frontend\\src\\services\\authService.js",["181"],"import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"https://localhost:5001/auth/login\";\r\nconst tokenKey = \"token\";\r\n\r\n//http.setJwt(getJwt());\r\n\r\nexport async function login(username, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { username, password });\r\n  localStorage.setItem(tokenKey, jwt.data);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport const config = {\r\n  headers: { Authorization: `Bearer ${localStorage.getItem(tokenKey)}` },\r\n};\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n  config,\r\n};\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\logout.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\receipts.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\navBar.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\Home.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\loginForm.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\registerForm.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptDetails.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptForm.jsx",["182"],"import React, { Component } from \"react\";\r\nimport ItemPriceForm from \"./itemPriceForm\";\r\nimport { getItems } from \"../services/itemService\";\r\nimport { getReceiptRaw, updateReceipt } from \"../services/receiptService\";\r\nimport Select from \"./common/select\";\r\nimport {\r\n  updateItemPrice,\r\n  addItemPrice,\r\n  deleteItemPrice,\r\n} from \"../services/itemPriceService\";\r\n\r\nclass ReceiptForm extends Component {\r\n  state = {\r\n    types: [],\r\n    items: [],\r\n    data: { itemPrices: [] },\r\n    deleted: [],\r\n    index: \"a\",\r\n    validate: false,\r\n    shops: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const itemPrices = await getReceiptRaw(this.props.match.params.id);\r\n    try {\r\n      const types = [\r\n        { id: 1, name: \"Mesos gaminiai\" },\r\n        { id: 2, name: \"Juros gerybes\" },\r\n        { id: 3, name: \"Kepiniai\" },\r\n        { id: 4, name: \"Darzoves\" },\r\n        { id: 5, name: \"Vaisiai\" },\r\n        { id: 6, name: \"Pieno produktai\" },\r\n        { id: 7, name: \"Gerimai\" },\r\n        { id: 8, name: \"Saldumynai\" },\r\n        { id: 9, name: \"Uzkandziai\" },\r\n      ];\r\n      const shops = [\r\n        { id: 1, name: \"Iki\" },\r\n        { id: 2, name: \"Norfa\" },\r\n        { id: 3, name: \"Rimi\" },\r\n        { id: 4, name: \"Lidl\" },\r\n        { id: 5, name: \"Maxima\" },\r\n      ];\r\n\r\n      const items = await getItems();\r\n      this.setState({ types, items, data: itemPrices, shops });\r\n      this.validate();\r\n    } catch (ex) {\r\n      this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    let validate = true;\r\n    this.state.data.shop > 0\r\n      ? this.state.data.itemPrices.forEach((e) =>\r\n          e.price <= 0 || !e.item.id || !e.item.type\r\n            ? (validate = false)\r\n            : (validate = validate)\r\n        )\r\n      : (validate = false);\r\n    this.setState({ validate });\r\n  }\r\n\r\n  updateData = (id, name, value) => {\r\n    const data = { ...this.state.data };\r\n    data.itemPrices.map((x) => this.changeData(x, id, name, value));\r\n    this.setState({ data });\r\n    this.validate();\r\n  };\r\n  handleSave = async () => {\r\n    if (this.state.modified)\r\n      await updateReceipt(parseInt(this.state.data.shop), this.state.data.id);\r\n    await this.state.deleted.forEach(async (x) => await deleteItemPrice(x));\r\n    const data = { ...this.state.data };\r\n    await data.itemPrices.forEach(async (x) => await this.saving(x));\r\n    window.location = \"/receipts\";\r\n  };\r\n\r\n  async saving(x) {\r\n    if (x.modified) {\r\n      await updateItemPrice(x.id, x.item.id, x.price, x.receiptId);\r\n    }\r\n    if (x.new) {\r\n      await addItemPrice(x.item.id, x.price, x.receiptId);\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    const data = { ...this.state.data };\r\n    const index = this.state.index;\r\n    const itemPrice = {\r\n      id: index,\r\n      item: { id: \"\" },\r\n      new: true,\r\n      type: \"\",\r\n      price: 0,\r\n      receiptId: this.state.data.id,\r\n    };\r\n    data.itemPrices.push(itemPrice);\r\n    const newIndex = index + \"a\";\r\n    this.setState({ data, index: newIndex });\r\n    this.validate();\r\n  };\r\n\r\n  handleShopChange = ({ currentTarget: input }) => {\r\n    const selectedShop = input.value;\r\n    let data = { ...this.state.data };\r\n    data.shop = selectedShop;\r\n    this.setState({ data, modified: true }, this.validate);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    let deleted = [...this.state.deleted];\r\n    deleted.push(id);\r\n    const data = { ...this.state.data };\r\n    const filtered = data.itemPrices.filter((itemPrice) => itemPrice.id !== id);\r\n    data.itemPrices = filtered;\r\n    this.setState({ data, deleted });\r\n  };\r\n\r\n  changeData(a, id, name, value) {\r\n    if (a.id === id) {\r\n      switch (name) {\r\n        case \"name\":\r\n          a.item.id = parseFloat(value);\r\n          break;\r\n        case \"price\":\r\n          a.price = parseFloat(value);\r\n          break;\r\n        case \"type\":\r\n          a.item.type = parseFloat(value);\r\n          break;\r\n        default:\r\n      }\r\n      !a.new && (a.modified = true);\r\n      return a;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  render() {\r\n    const { items, types, data } = this.state;\r\n\r\n    return (\r\n      \r\n        \r\n        <div class =\"Box_content\" >\r\n          <h1>Receipt Nr.{this.props.match.params.id}</h1>\r\n\r\n          <h2>Shop: </h2>\r\n          <Select\r\n            test={false}\r\n            name=\"shops\"\r\n            value={this.state.data.shop}\r\n            label=\"Shops\"\r\n            options={this.state.shops}\r\n            onChange={this.handleShopChange}\r\n          />\r\n\r\n          <div>\r\n            {this.state.validate ? (\r\n              <button\r\n                className=\"btn btn-primary btn-lg\"\r\n                onClick={this.handleSave}\r\n              >\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <button className=\"btn btn-lg btn-primary\" disabled>\r\n                Save\r\n              </button>\r\n            )}\r\n            </div>\r\n           \r\n       \r\n\r\n        {data.itemPrices.map((itemPrice) => (\r\n          <ItemPriceForm\r\n            id={itemPrice.id}\r\n            items={items}\r\n            types={types}\r\n            key={itemPrice.id}\r\n            selectedName={itemPrice.item.id}\r\n            selectedPrice={itemPrice.price}\r\n            selectedType={itemPrice.item.type}\r\n            updateData={this.updateData}\r\n            onDelete={() => this.handleDelete(itemPrice.id)}\r\n          />\r\n        ))}\r\n        {this.state.validate ? (\r\n          <button className=\"btn btn-secondary btn-lg\" onClick={this.handleAdd}>\r\n            +\r\n          </button>\r\n        ) : (\r\n          <button className=\"btn btn-lg btn-secondary\" disabled>\r\n            +\r\n          </button>\r\n            )}\r\n      </div>\r\n\r\n\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default ReceiptForm;\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\userStats.jsx",["183"],"import React, { Component } from \"react\";\r\nimport { Doughnut, Line } from \"react-chartjs-2\";\r\nimport {\r\n  getShopFrequency,\r\n  getItemsFrequency,\r\n  getDates,\r\n  formatDate,\r\n} from \"../services/userStatsService\";\r\nclass UserStats extends Component {\r\n  state = {\r\n    shopFrequency: {\r\n      labels: [],\r\n      datasets: [],\r\n    },\r\n    moneySpent: {\r\n      labels: [],\r\n      datasets: [],\r\n    },\r\n\r\n    itemFrequency: {\r\n      labels: [],\r\n      datasets: [],\r\n    },\r\n\r\n    iMoneySpent: {\r\n      labels: [],\r\n      datasets: [],\r\n    },\r\n\r\n    monthFrequency: {\r\n      labels: [],\r\n      datasets: [],\r\n    },\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const shopsFrequency = await getShopFrequency();\r\n    const itemsFrequency = await getItemsFrequency();\r\n    const monthFrequency = await getDates();\r\n\r\n    const shops = shopsFrequency.map((x) => x.name);\r\n    const frequency = shopsFrequency.map((x) => x.shopFrequency);\r\n    const spent = shopsFrequency.map((x) => x.moneySpent);\r\n\r\n    const items = itemsFrequency.map((x) => x.frequentItem.name);\r\n    const iFrequency = itemsFrequency.map((x) => x.itemFrequency);\r\n    const iSpent = itemsFrequency.map((x) => x.moneySpent);\r\n\r\n    const colors = [\"#264653\", \"#2a9d8f\", \"#e9c46a\", \"#f4a261\", \"#e76f51\"];\r\n\r\n    const shopFrequency = {\r\n      labels: shops,\r\n      datasets: [\r\n        {\r\n          label: \"# of Shops\",\r\n          data: frequency,\r\n          backgroundColor: colors,\r\n          borderWidth: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const moneySpent = {\r\n      labels: shops,\r\n      datasets: [\r\n        {\r\n          label: \"# of Shops\",\r\n          data: spent,\r\n          backgroundColor: colors,\r\n          borderWidth: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const itemFrequency = {\r\n      labels: items,\r\n      datasets: [\r\n        {\r\n          label: \"# of Shops\",\r\n          data: iFrequency,\r\n          backgroundColor: colors,\r\n          borderWidth: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const iMoneySpent = {\r\n      labels: items,\r\n      datasets: [\r\n        {\r\n          label: \"# of Shops\",\r\n          data: iSpent,\r\n          backgroundColor: colors,\r\n          borderWidth: 0,\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.setState({\r\n      shopFrequency,\r\n      moneySpent,\r\n      itemFrequency,\r\n      iMoneySpent,\r\n      monthFrequency,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Box_content\" style={{ margin: \"50px\" }}>\r\n        <div>\r\n          <h1\r\n            style={{\r\n              textAlign: \"center\",\r\n              fontSize: 40,\r\n              color: \"#616161\",\r\n              padding: 10,\r\n            }}\r\n          >\r\n            My Statistics\r\n          </h1>\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col shadow p-3 mb-3 mr-5 bg-white rounded\">\r\n              <h2\r\n                className=\"mb-4\"\r\n                style={{ textAlign: \"center\", fontSize: 20, color: \"#616161\" }}\r\n              >\r\n                Most frequently visited shops\r\n              </h2>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Doughnut\r\n                  width={500}\r\n                  height={500}\r\n                  data={this.state.shopFrequency}\r\n                  options={{\r\n                    responsive: false,\r\n                    legend: {\r\n                      position: \"bottom\",\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col shadow p-3 mb-3  bg-white rounded\">\r\n              <h2\r\n                className=\"mb-4\"\r\n                style={{ textAlign: \"center\", fontSize: 20, color: \"#616161\" }}\r\n              >\r\n                Money spent (Euro)\r\n              </h2>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Doughnut\r\n                  width={500}\r\n                  height={500}\r\n                  data={this.state.moneySpent}\r\n                  options={{\r\n                    responsive: false,\r\n                    legend: {\r\n                      position: \"bottom\",\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col shadow p-3 mb-3 mr-5 bg-white rounded\">\r\n              <h2\r\n                className=\"mb-4\"\r\n                style={{ textAlign: \"center\", fontSize: 20, color: \"#616161\" }}\r\n              >\r\n                Top 5 Most frequently bought items\r\n              </h2>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Doughnut\r\n                  width={500}\r\n                  height={500}\r\n                  data={this.state.itemFrequency}\r\n                  options={{\r\n                    responsive: false,\r\n                    legend: {\r\n                      position: \"bottom\",\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col shadow p-3 mb-3 bg-white rounded\">\r\n              <h2\r\n                className=\"mb-4\"\r\n                style={{ textAlign: \"center\", fontSize: 20, color: \"#616161\" }}\r\n              >\r\n                Top 5 Total cost (Eur)\r\n              </h2>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Doughnut\r\n                  width={500}\r\n                  height={500}\r\n                  data={this.state.iMoneySpent}\r\n                  options={{\r\n                    responsive: false,\r\n                    legend: {\r\n                      position: \"bottom\",\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row mt-4\">\r\n            <div className=\"col shadow p-3 mb-5 bg-white rounded\">\r\n              <h2\r\n                className=\"mb-4\"\r\n                style={{ textAlign: \"center\", fontSize: 20, color: \"#616161\" }}\r\n              >\r\n                Shopping frequecy per month\r\n              </h2>\r\n              <div className=\"mb-4 ml-4\">\r\n                <Line\r\n                  data={this.state.monthFrequency}\r\n                  options={{\r\n                    scales: {\r\n                      xAxes: [\r\n                        {\r\n                          type: \"time\",\r\n                        },\r\n                      ],\r\n                      yAxes: [\r\n                        {\r\n                          ticks: {\r\n                            beginAtZero: true,\r\n                            stepSize: 1,\r\n                          },\r\n                        },\r\n                      ],\r\n                    },\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserStats;\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\userDetails.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\notFound.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\priceHistory.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingForm.jsx",["184","185","186","187"],"import React, { Component } from \"react\";\r\nimport ShoppingCartForm from \"./shoppingCartForm\";\r\nimport { getItems } from \"../services/itemService\";\r\nimport { getReceiptRaw, updateReceipt } from \"../services/receiptService\";\r\nimport Select from \"./common/select\";\r\nimport {\r\n  updateItemPrice,\r\n  addItemPrice,\r\n  deleteItemPrice,\r\n} from \"../services/itemPriceService\";\r\nimport ShoppingCartPage from \"./shoppingCartPage\";\r\n\r\nclass ShoppingForm extends Component {\r\n  state = {\r\n    types: [],\r\n    items: [],\r\n    data: { itemPrices: [] },\r\n    deleted: [],\r\n    index: \"a\",\r\n    validate: false,\r\n    shops: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const types = [\r\n        { id: 1, name: \"Mesos gaminiai\" },\r\n        { id: 2, name: \"Juros gerybes\" },\r\n        { id: 3, name: \"Kepiniai\" },\r\n        { id: 4, name: \"Darzoves\" },\r\n        { id: 5, name: \"Vaisiai\" },\r\n        { id: 6, name: \"Pieno produktai\" },\r\n        { id: 7, name: \"Gerimai\" },\r\n        { id: 8, name: \"Saldumynai\" },\r\n        { id: 9, name: \"Uzkandziai\" },\r\n      ];\r\n      const shops = [\r\n        { id: 1, name: \"Iki\" },\r\n        { id: 2, name: \"Norfa\" },\r\n        { id: 3, name: \"Rimi\" },\r\n        { id: 4, name: \"Lidl\" },\r\n        { id: 5, name: \"Maxima\" },\r\n      ];\r\n\r\n      const items = await getItems();\r\n      this.setState({ types, items, shops });\r\n      console.log(items);\r\n      this.validate();\r\n    } catch (ex) {\r\n      this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  validate() {\r\n    this.setState({validate:  true });\r\n  }\r\n\r\n  updateData = (id, name, value) => {\r\n    const data = { ...this.state.data };\r\n    data.itemPrices.map((x) => this.changeData(x, id, name, value));\r\n    this.setState({ data });\r\n    this.validate();\r\n  };\r\n  handleSave = async () => {\r\n    const data = { ...this.state.data };\r\n    console.log(data);\r\n  };\r\n\r\n  async saving(x) {\r\n    if (x.modified) {\r\n      await updateItemPrice(x.id, x.item.id, x.price, x.receiptId);\r\n    }\r\n    if (x.new) {\r\n      await addItemPrice(x.item.id, x.price, x.receiptId);\r\n    }\r\n  }\r\n\r\n  handleAdd = () => {\r\n    const data = { ...this.state.data };\r\n    const index = this.state.index;\r\n    const itemPrice = {\r\n      id: index,\r\n      item: { id: \"\" },\r\n      new: true,\r\n      type: \"\",\r\n      price: 0,\r\n      receiptId: this.state.data.id,\r\n    };\r\n    data.itemPrices.push(itemPrice);\r\n    const newIndex = index + \"a\";\r\n    this.setState({ data, index: newIndex });\r\n    this.validate();\r\n  };\r\n\r\n  handleShopChange = ({ currentTarget: input }) => {\r\n    const selectedShop = input.value;\r\n    let data = { ...this.state.data };\r\n    data.shop = selectedShop;\r\n    this.setState({ data, modified: true }, this.validate);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    let deleted = [...this.state.deleted];\r\n    deleted.push(id);\r\n    const data = { ...this.state.data };\r\n    const filtered = data.itemPrices.filter((itemPrice) => itemPrice.id !== id);\r\n    data.itemPrices = filtered;\r\n    this.setState({ data, deleted });\r\n  };\r\n\r\n  changeData(a, id, name, value) {\r\n    if (a.id === id) {\r\n      switch (name) {\r\n        case \"name\":\r\n          a.item.id = parseFloat(value);\r\n          break;\r\n        case \"price\":\r\n          a.price = parseFloat(value);\r\n          break;\r\n        case \"type\":\r\n          a.item.type = parseFloat(value);\r\n          break;\r\n        default:\r\n      }\r\n      !a.new && (a.modified = true);\r\n      return a;\r\n    }\r\n    return a;\r\n  }\r\n\r\n  render() {\r\n    const { items, types, data } = this.state;\r\n    \r\n\r\n    return (\r\n      <div className=\"Box\">\r\n         <p className=\"Box_content\">\r\n        <div className=\"d-flex justify-content-between m-3\">\r\n          <h1>Shopping Cart{this.props.match.params.id}</h1>\r\n        </div>\r\n\r\n        {data.itemPrices.map((itemPrice) => (\r\n          <ShoppingCartForm\r\n            id={itemPrice.id}\r\n            items={items}\r\n            types={types}\r\n            key={itemPrice.id}\r\n            selectedName={itemPrice.item.id}\r\n            selectedPrice={itemPrice.price}\r\n            selectedType={itemPrice.item.type}\r\n            updateData={this.updateData}\r\n            onDelete={() => this.handleDelete(itemPrice.id)}\r\n          />\r\n        ))}\r\n        { (\r\n          <button className=\"btn btn-secondary btn-lg\" onClick={this.handleAdd}>\r\n            Add item\r\n          </button>\r\n        )}\r\n        <ShoppingCartPage\r\n          cart={data}\r\n          />\r\n          </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShoppingForm;\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\dealPage.jsx",["188"],"import React, { Component } from \"react\";\r\nimport { getDeals } from \"../services/shoppingCartService\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport DealTable from \"./dealTable\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Deals extends Component {\r\n  state = {\r\n    receipts: [],\r\n    sortColumn: { path: \"Shop\", order: \"asc\" },\r\n    shops: [],\r\n    selectedShop: null,\r\n    pageSize: 10,\r\n    activePage: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const receipts = await getDeals();\r\n    const shops = [\r\n      { id: 0, name: \"All Shops\" },\r\n      { id: 1, name: \"Iki\" },\r\n      { id: 2, name: \"Norfa\" },\r\n      { id: 3, name: \"Rimi\" },\r\n      { id: 4, name: \"Lidl\" },\r\n      { id: 5, name: \"Maxima\" },\r\n    ];\r\n    this.setState({ receipts, shops });\r\n  }\r\n\r\n  handleShopSelect = (shop) => {\r\n    this.setState({ selectedShop: shop });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ activePage: page });\r\n  };\r\n\r\n  handleInfo(props) {\r\n    props.history.push(\"/\");\r\n  }\r\n  \r\n\r\n  paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n  }\r\n\r\n  getPagedData() {\r\n    const {\r\n      activePage,\r\n      pageSize,\r\n      receipts: allReceipts,\r\n      selectedShop,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    let filtered = allReceipts;\r\n    if (selectedShop && selectedShop.id !== 0)\r\n      filtered = allReceipts.filter(\r\n        (receipt) => receipt.shop === selectedShop.name\r\n      );\r\n    \r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const receipts = this.paginate(sorted, activePage, pageSize);\r\n    return { totalCount: filtered.length, data: receipts };\r\n  }\r\n  \r\n\r\n  render() {\r\n    \r\n    const { sortColumn, pageSize, activePage } = this.state;\r\n    const { totalCount, data: receipts } = this.getPagedData();\r\n    return (\r\n      <div className=\"Box\">\r\n        <p className=\"Box_content\">\r\n        <h1 className=\"m-2\">Best Deals</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 \">\r\n            <ListGroup\r\n              items={this.state.shops}\r\n              selectedItem={this.state.selectedShop}\r\n              onItemSelect={this.handleShopSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <DealTable\r\n              getTrProps={this.getTRPropsType}  \r\n              receipts={receipts}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              activePage={activePage}\r\n            />\r\n          </div>\r\n          </div>\r\n          </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deals;","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\protectedRoute.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\services\\httpService.js",["189"],"import axios from \"axios\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(error);\r\n    alert(\"An unexpected error occurrred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\n// function setJwt(jwt) {\r\n//   axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n// }\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","D:\\C#\\PSI\\psi-frontend\\src\\services\\receiptService.js",[],"D:\\C#\\PSI\\psi-frontend\\src\\services\\userService.js",["190"],"import http from \"./httpService\";\r\nimport auth from \"./authService\";\r\n\r\nconst apiEndpoint = \"https://localhost:5001/auth/register\";\r\nconst apiEndpointDetails = \"https://localhost:5001/auth/\";\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        email: user.username,\r\n        password: user.password,\r\n        username: user.name\r\n    });\r\n\r\n}\r\n\r\nexport function changeDetails(user) {\r\n    return http.put(apiEndpointDetails, {\r\n            email: user.username,\r\n            password: user.password,\r\n            username: user.name\r\n    },\r\n        auth.config\r\n    );\r\n\r\n}\r\n\r\nexport default {\r\n    register, changeDetails\r\n};","D:\\C#\\PSI\\psi-frontend\\src\\services\\itemService.js",[],"D:\\C#\\PSI\\psi-frontend\\src\\services\\itemPriceService.js",[],"D:\\C#\\PSI\\psi-frontend\\src\\services\\userStatsService.js",["191","192","193","194"],"import http from \"./httpService\";\r\nimport auth from \"./authService\";\r\nimport _, { filter } from \"lodash\";\r\n\r\nconst apiEndpoint = \"https://localhost:5001/userstat\";\r\n\r\nexport async function getShopFrequency() {\r\n  let shops = await http.get(apiEndpoint + \"/shops\", auth.config);\r\n  const newShops = shops.data.data.map((x) => mapShop(x));\r\n  return newShops;\r\n}\r\n\r\nexport async function getItemsFrequency() {\r\n  let items = await http.get(apiEndpoint + \"/items\", auth.config);\r\n  let data = _.orderBy(items.data.data, \"itemFrequency\", \"desc\");\r\n  return data.slice(0, 5);\r\n}\r\n\r\nexport async function getDates() {\r\n  const datesRaw = await http.get(apiEndpoint + \"/dates\", auth.config);\r\n  const filtered = _.orderBy(datesRaw.data.data, \"date\", \"asc\");\r\n\r\n  let from = new Date(filtered[0].date);\r\n  let to = new Date(filtered[filtered.length - 1].date);\r\n  let mixed = [];\r\n  let obj;\r\n  let test;\r\n\r\n  for (var d = from; d <= to; d.setDate(d.getDate() + 1)) {\r\n    obj = filtered.find(\r\n      (x) => new Date(x.date).getTime() === new Date(d).getTime()\r\n    );\r\n\r\n    if (obj) {\r\n      for (var k = 1; k < 6; k++) {\r\n        if (!obj.shopsVisited.find((x) => x.shop === k))\r\n          obj.shopsVisited.push({ shop: k, amount: 0 });\r\n      }\r\n      mixed.push(obj);\r\n    } else {\r\n      mixed.push({\r\n        date: new Date(d),\r\n        shopsVisited: [\r\n          { shop: 1, amount: 0 },\r\n          { shop: 2, amount: 0 },\r\n          { shop: 3, amount: 0 },\r\n          { shop: 4, amount: 0 },\r\n          { shop: 5, amount: 0 },\r\n        ],\r\n      });\r\n    }\r\n  }\r\n  let dates = { Iki: [], Norfa: [], Lidl: [], Rimi: [], Maxima: [] };\r\n  for (var i = 0; i < mixed.length; i++) {\r\n    for (var j = 0; j < mixed[i].shopsVisited.length; j++) {\r\n      dates[mapShop({ frequentShop: mixed[i].shopsVisited[j].shop }).name].push(\r\n        {\r\n          t: convertDate(mixed[i].date),\r\n          y: mixed[i].shopsVisited[j].amount,\r\n        }\r\n      );\r\n    }\r\n  }\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        label: \"iki\",\r\n        data: dates.Iki,\r\n        backgroundColor: \"rgba(38, 70, 83, 0.2)\",\r\n        borderColor: \"rgba(38, 70, 83, 1)\",\r\n      },\r\n      {\r\n        label: \"maxima\",\r\n        data: dates.Maxima,\r\n        backgroundColor: \"rgba(42, 157, 143, 0.2)\",\r\n        borderColor: \"rgba(42, 157, 143, 1)\",\r\n      },\r\n      {\r\n        label: \"lild\",\r\n        data: dates.Lidl,\r\n        backgroundColor: \"rgba(233, 196, 106, 0.2)\",\r\n        borderColor: \"rgba(233, 196, 106, 1)\",\r\n      },\r\n      {\r\n        label: \"rimi\",\r\n        data: dates.Rimi,\r\n        backgroundColor: \"rgba(244, 162, 97, 0.2)\",\r\n        borderColor: \"rgba(244, 162, 97, 1)\",\r\n      },\r\n      {\r\n        label: \"norfa\",\r\n        data: dates.Norfa,\r\n        backgroundColor: \"rgba(231, 111, 81, 0.2)\",\r\n        borderColor: \"rgba(231, 111, 81, 1)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return data;\r\n}\r\n\r\nfunction convertDate(date) {\r\n  const newDate = formatDate(new Date(date));\r\n  return newDate;\r\n}\r\n\r\nexport function formatDate(date) {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n}\r\n\r\nfunction mapShop(item) {\r\n  switch (item.frequentShop) {\r\n    case 1:\r\n      item[\"name\"] = \"Iki\";\r\n      break;\r\n    case 2:\r\n      item[\"name\"] = \"Norfa\";\r\n      break;\r\n    case 3:\r\n      item[\"name\"] = \"Rimi\";\r\n      break;\r\n    case 4:\r\n      item[\"name\"] = \"Lidl\";\r\n      break;\r\n    case 5:\r\n      item[\"name\"] = \"Maxima\";\r\n      break;\r\n    default:\r\n      item[\"name\"] = \"Not Found\";\r\n  }\r\n  return item;\r\n}\r\n","D:\\C#\\PSI\\psi-frontend\\src\\services\\shoppingCartService.js",["195","196","197","198"],"import authService from \"./authService\";\r\nimport http from \"./httpService\";\r\nimport auth from \"./authService\";\r\n\r\nconst apiEndpoint = \"https://localhost:5001/ShoppingCart\";\r\nconst apiEndpointa = \"https://localhost:5001/item/\";\r\nconst shopCart = {Cart: [121, 131, 141]};\r\nexport async function getDeals() {\r\n  \r\n  const names = await http.get(apiEndpointa + \"all\", auth.config);\r\n\r\n   \r\n  const cart = await http.get(apiEndpoint + \"/deals\", auth.config);\r\n  const mapped = cart.data.data.map( ((cart ) => ({\r\n    id: cart.id + cart.shop,\r\n    name: getItemName(cart.id, names.data.data),\r\n    shop: mapShop(cart.shop),\r\n    date: formatDate(new Date(cart.date)),\r\n    price: cart.price\r\n  })));\r\n\r\n  return mapped;\r\n}\r\nexport async function getShoppingCart(shopCart) {\r\n  const names = await http.get(apiEndpointa + \"all\", auth.config);\r\n  const cart = await http.post(apiEndpoint + \"/best\", { Cart: shopCart});\r\n  const mapped = cart.data.data.map(((cart) => makeItem(cart, names)));\r\n\r\n  return mapped;\r\n}\r\nexport async function getShoppingCartC(selected,shopCart) {\r\n  console.log(selected.length );\r\n  if (selected.length != 0) \r\n  {\r\n    var str;\r\n    console.log(makeShoppingList(selected));\r\n    str = makeShoppingList(selected);\r\n    console.log(str);\r\n    const names = await http.get(apiEndpointa + \"all\", auth.config);\r\n    const cart = await http.post(apiEndpoint + \"/bestC?\" + str, { Cart: shopCart });\r\n    const mapped = cart.data.data.map(((cart) => makeItem(cart, names)));\r\n\r\n    return mapped;\r\n  } else\r\n    return getShoppingCart(shopCart);\r\n}\r\nfunction makeShoppingList(selected) {\r\n  var line = \"\";\r\n  for (var i = 0; i < selected.length; i++){\r\n    line =line + \"shops=\" + selected[i] + \"&\";\r\n  }\r\n  return line;\r\n}\r\n\r\nfunction makeItem(cart, names) {\r\n  if (cart != null) {\r\n    return ({\r\n      name: getItemName(cart.id, names.data.data),\r\n      shop: mapShop(cart.shop),\r\n      date: formatDate(new Date(cart.date)),\r\n      price: cart.price\r\n    });\r\n  }\r\n  return ({\r\n      name: \"Item not found in any of the selected stores.\",\r\n      shop: \"\",\r\n      date: \"\",\r\n      price: \"\"\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction getItemName(id, names) {\r\n  const na = (names.filter(item => item.id === id))[0].name; \r\n  return na;\r\n}\r\n\r\nfunction formatDate(date) {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n}\r\nfunction mapShop(id) {\r\n  let name = \"Not Found\";\r\n  switch (id) {\r\n    case 1:\r\n      name = \"Iki\";\r\n      break;\r\n    case 2:\r\n      name = \"Norfa\";\r\n      break;\r\n    case 3:\r\n      name = \"Rimi\";\r\n      break;\r\n    case 4:\r\n      name = \"Lidl\";\r\n      break;\r\n    case 5:\r\n      name = \"Maxima\";\r\n      break;\r\n  }\r\n  return name;\r\n}","D:\\C#\\PSI\\psi-frontend\\src\\components\\receiptTable.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\pagination.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\listGroup.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\form.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\itemPriceTable.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\select.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartForm.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\itemPriceForm.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartPage.jsx",["199","200","201","202"],"import React, { Component } from \"react\";\r\nimport { getDeals,getShoppingCart,getShoppingCartC } from \"../services/shoppingCartService\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport ShoppingCartTable from \"./shoppingCartTable\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass ShoppingCartPage extends Component {\r\n  state = {\r\n    receipts: [],\r\n    sortColumn: { path: \"Shop\", order: \"asc\" },\r\n    shops: [],\r\n    selectedShop: null,\r\n    pageSize: 10,\r\n    activePage: 1,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const receipts = await getShoppingCart({Cart: [0]});\r\n    const shops = [\r\n      { id: 0, name: \"All Shops\" },\r\n      { id: 1, name: \"Iki\" },\r\n      { id: 2, name: \"Norfa\" },\r\n      { id: 3, name: \"Rimi\" },\r\n      { id: 4, name: \"Lidl\" },\r\n      { id: 5, name: \"Maxima\" },\r\n    ];\r\n    this.setState({ receipts, shops });\r\n  }\r\n\r\n  handleShopSelect = (shop) => {\r\n    this.setState({ selectedShop: shop });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n   handleSort = (receipts) => {\r\n    this.setState({ receipts });\r\n  };\r\n  \r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ activePage: page });\r\n  };\r\n\r\n  handleInfo(props) {\r\n    props.history.push(\"/\");\r\n  }\r\n  \r\n\r\n  paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n  }\r\n  getPagedData() {\r\n    const {\r\n      activePage,\r\n      pageSize,\r\n      receipts: allReceipts,\r\n      selectedShop,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    let filtered = allReceipts;\r\n    if (selectedShop && selectedShop.id !== 0)\r\n      filtered = allReceipts.filter(\r\n        (receipt) => receipt.shop === selectedShop.name\r\n      );\r\n    \r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const receipts = this.paginate(sorted, activePage, pageSize);\r\n    return { totalCount: filtered.length, data: receipts };\r\n  }\r\n\r\n  getSelectedShops() {\r\n    return [\r\n      {shop: 1,selected: document.getElementById(\"CheckIki\").checked},\r\n      {shop: 2,selected: document.getElementById(\"CheckNorfa\").checked},\r\n      {shop: 3 ,selected: document.getElementById(\"CheckRimi\").checked },\r\n      {shop: 4,selected: document.getElementById(\"CheckLidl\").checked},\r\n      { shop: 5,selected: document.getElementById(\"CheckMaxima\").checked }\r\n    ];\r\n  }\r\n  async buttonClick(Datacart) {\r\n    const shopCart = Datacart.itemPrices.map((x) => (\r\n      x.item.id\r\n    ));\r\n    const stores = this.getSelectedShops();\r\n    const filter = stores.filter((store) => store.selected == true);\r\n    const selected = filter.map((cart) => (cart.shop));\r\n    const cart = await getShoppingCartC(selected, shopCart);\r\n\r\n    this.setState({ receipts: cart });\r\n    \r\n  }\r\n\r\n\r\n  render() {\r\n    const { sortColumn, pageSize, activePage } = this.state;\r\n    const { totalCount, data: receipts } = this.getPagedData();\r\n    const { cart } = this.props;\r\n    return (\r\n      <div>\r\n        <button \r\n            className=\"btn btn-secondary btn-lg\"\r\n          onClick={() => this.buttonClick(cart)}\r\n          style ={{borderColor : \"rgb(255, 182, 26)\",color : \"rgb(36, 29, 21)\" ,backgroundColor: \"rgb(255, 223, 26)\", marginTop :\"5px\",marginBottom :\"5px\"}}\r\n        >\r\n              Find Deals\r\n        </button>     \r\n        <div class=\"form-check form-check-inline\" style={{float: 'right'}} >\r\n          <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckIki\" value=\"option1\" />\r\n            <label class=\"form-check-label\" for=\"CheckIki\" style={{marginRight : \"10px\"}}>Iki   </label>\r\n      \r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckNorfa\" value=\"option1\"/>\r\n            <label class=\"form-check-label\" for=\"CheckNorfa\" style={{marginRight : \"10px\"}}>Norfa </label>\r\n     \r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckRimi\" value=\"option1\"/>\r\n            <label class=\"form-check-label\" for=\"CheckRimi\" style={{marginRight : \"10px\"}}>Rimi   </label>\r\n        \r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckLidl\" value=\"option1\"/>\r\n            <label class=\"form-check-label\" for=\"CheckLidl\" style={{marginRight : \"10px\"}}>Lidl   </label>\r\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"CheckMaxima\" value=\"option1\"/>\r\n            <label class=\"form-check-label\" for=\"CheckMaxima\" style={{marginRight : \"10px\"}}>Maxima   </label>\r\n        </div>\r\n        <div className=\"col\">\r\n       \r\n            <ShoppingCartTable \r\n              receipts={receipts}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              activePage={activePage}\r\n            />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShoppingCartPage;","D:\\C#\\PSI\\psi-frontend\\src\\components\\dealTable.jsx",["203","204","205","206","207","208"],"import React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass DealTable extends Component {\r\n  columns = [\r\n     {\r\n      path: \"name\",  label: \"Item\",\r\n    },\r\n    { path: \"shop\", label: \"Shop\" },\r\n    {\r\n      path: \"date\",label: \"Date\",\r\n    },\r\n    {\r\n      path: \"price\",label: \"Change (Euro)\"\r\n    },\r\n    {\r\n      label: \"\", key: \"arrow\", content: (price) => (\r\n        <div class={getChange(price.price)}></div>\r\n    )}\r\n  ];\r\n\r\n \r\n  \r\n  render() {\r\n    const { classes, receipts, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table \r\n        class=\"table-danger\" \r\n        columns={this.columns}\r\n        data={receipts}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}    \r\n      />\r\n    );\r\n  }\r\n}\r\nfunction getChange(price) {\r\n  if (price == 0)\r\n    return \"\"\r\n  else if (price > 0)\r\n    return \"GreenArrow\"\r\n  else\r\n    return \"RedArrow\"\r\n}\r\n\r\nexport default DealTable;\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\table.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\input.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\shoppingCartTable.jsx",["209","210","211","212"],"import React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ShoppingCartTable extends Component {\r\n  columns = [\r\n     {\r\n      path: \"name\",  label: \"Item\",\r\n    },\r\n    { path: \"shop\", label: \"Shop\" },\r\n    {\r\n      path: \"price\",label: \"Price (Euro)\"}\r\n  ];\r\n  \r\n \r\n  \r\n  render() {\r\n    const { receipts, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table \r\n        columns={this.columns}\r\n        data={receipts}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}    \r\n      />\r\n    );\r\n  }\r\n}\r\nexport default ShoppingCartTable;\r\n","D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\tableBody.jsx",[],"D:\\C#\\PSI\\psi-frontend\\src\\components\\common\\tableHeader.jsx",[],{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","severity":1,"message":"218","line":39,"column":1,"nodeType":"219","endLine":46,"endColumn":3},{"ruleId":"220","severity":1,"message":"221","line":59,"column":27,"nodeType":"222","messageId":"223","endLine":59,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":7,"column":3,"nodeType":"222","messageId":"226","endLine":7,"endColumn":13},{"ruleId":"224","severity":1,"message":"227","line":4,"column":10,"nodeType":"222","messageId":"226","endLine":4,"endColumn":23},{"ruleId":"224","severity":1,"message":"228","line":4,"column":25,"nodeType":"222","messageId":"226","endLine":4,"endColumn":38},{"ruleId":"224","severity":1,"message":"229","line":5,"column":8,"nodeType":"222","messageId":"226","endLine":5,"endColumn":14},{"ruleId":"224","severity":1,"message":"230","line":9,"column":3,"nodeType":"222","messageId":"226","endLine":9,"endColumn":18},{"ruleId":"224","severity":1,"message":"231","line":7,"column":10,"nodeType":"222","messageId":"226","endLine":7,"endColumn":20},{"ruleId":"217","severity":1,"message":"218","line":21,"column":1,"nodeType":"219","endLine":26,"endColumn":3},{"ruleId":"217","severity":1,"message":"218","line":27,"column":1,"nodeType":"219","endLine":29,"endColumn":3},{"ruleId":"224","severity":1,"message":"232","line":3,"column":13,"nodeType":"222","messageId":"226","endLine":3,"endColumn":19},{"ruleId":"224","severity":1,"message":"233","line":27,"column":7,"nodeType":"222","messageId":"226","endLine":27,"endColumn":11},{"ruleId":"234","severity":1,"message":"235","line":31,"column":7,"nodeType":"236","messageId":"237","endLine":31,"endColumn":66},{"ruleId":"234","severity":1,"message":"238","line":36,"column":36,"nodeType":"236","messageId":"237","endLine":36,"endColumn":55},{"ruleId":"224","severity":1,"message":"239","line":1,"column":8,"nodeType":"222","messageId":"226","endLine":1,"endColumn":19},{"ruleId":"224","severity":1,"message":"240","line":7,"column":7,"nodeType":"222","messageId":"226","endLine":7,"endColumn":15},{"ruleId":"241","severity":1,"message":"242","line":33,"column":23,"nodeType":"243","messageId":"244","endLine":33,"endColumn":25},{"ruleId":"245","severity":1,"message":"246","line":92,"column":3,"nodeType":"247","messageId":"248","endLine":108,"endColumn":4},{"ruleId":"224","severity":1,"message":"249","line":2,"column":10,"nodeType":"222","messageId":"226","endLine":2,"endColumn":18},{"ruleId":"224","severity":1,"message":"250","line":3,"column":8,"nodeType":"222","messageId":"226","endLine":3,"endColumn":17},{"ruleId":"224","severity":1,"message":"231","line":7,"column":10,"nodeType":"222","messageId":"226","endLine":7,"endColumn":20},{"ruleId":"241","severity":1,"message":"251","line":92,"column":60,"nodeType":"243","messageId":"244","endLine":92,"endColumn":62},{"ruleId":"224","severity":1,"message":"252","line":3,"column":10,"nodeType":"222","messageId":"226","endLine":3,"endColumn":25},{"ruleId":"224","severity":1,"message":"253","line":4,"column":10,"nodeType":"222","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"224","severity":1,"message":"254","line":4,"column":19,"nodeType":"222","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"224","severity":1,"message":"255","line":5,"column":10,"nodeType":"222","messageId":"226","endLine":5,"endColumn":14},{"ruleId":"224","severity":1,"message":"256","line":28,"column":13,"nodeType":"222","messageId":"226","endLine":28,"endColumn":20},{"ruleId":"241","severity":1,"message":"251","line":42,"column":13,"nodeType":"243","messageId":"244","endLine":42,"endColumn":15},{"ruleId":"224","severity":1,"message":"252","line":3,"column":10,"nodeType":"222","messageId":"226","endLine":3,"endColumn":25},{"ruleId":"224","severity":1,"message":"253","line":4,"column":10,"nodeType":"222","messageId":"226","endLine":4,"endColumn":17},{"ruleId":"224","severity":1,"message":"254","line":4,"column":19,"nodeType":"222","messageId":"226","endLine":4,"endColumn":31},{"ruleId":"224","severity":1,"message":"255","line":5,"column":10,"nodeType":"222","messageId":"226","endLine":5,"endColumn":14},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-self-assign","'validate' is assigned to itself.","Identifier","selfAssignment","no-unused-vars","'formatDate' is defined but never used.","unusedVar","'getReceiptRaw' is defined but never used.","'updateReceipt' is defined but never used.","'Select' is defined but never used.","'deleteItemPrice' is defined but never used.","'withRouter' is defined but never used.","'filter' is defined but never used.","'test' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'd'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'k'.","'authService' is defined but never used.","'shopCart' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'getDeals' is defined but never used.","'ListGroup' is defined but never used.","Expected '===' and instead saw '=='.","'FontAwesomeIcon' is defined but never used.","'faTimes' is defined but never used.","'faInfoCircle' is defined but never used.","'Link' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]